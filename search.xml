<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机网络-SAP和OSI</title>
      <link href="/2020/10/20/ji-suan-ji-wang-luo-sap-he-osi/"/>
      <url>/2020/10/20/ji-suan-ji-wang-luo-sap-he-osi/</url>
      
        <content type="html"><![CDATA[<h1 id="OSI-网络体系结构"><a href="#OSI-网络体系结构" class="headerlink" title="OSI 网络体系结构"></a>OSI 网络体系结构</h1><h2 id="OSI"><a href="#OSI" class="headerlink" title="OSI"></a>OSI</h2><p>OSI 具有七层协议</p><blockquote><p>（应用层 表示层 会话层 运输层 网络层 数据链路层）</p></blockquote><p>TCP/IP 具有四层协议</p><blockquote><p>（应用层 运输层 网络层 网络接口层）</p></blockquote><p>在学习网络体系结构时，折中采用五层协议，也就是把网络接口层拆开为数据链路层和物理层</p><blockquote><p>（具体应用还是四层协议，没有这么麻烦，）</p></blockquote><p>![计算机网络体系结构](<img src="https://raw.githubusercontent.com/HUMBLEDADDY/ImageHosting/master/img/20201021174526.png">)</p><p><img src="https://raw.githubusercontent.com/HUMBLEDADDY/ImageHosting/master/img/20201021174526.png"></p><p><strong>只有物理层的连接才是真连接，其他层的连接都是靠软件实现的逻辑上的连接</strong></p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png?v8">💻</span>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png?v8">💻</span></p><p><img src="https://raw.githubusercontent.com/HUMBLEDADDY/ImageHosting/master/img/a.png" alt="数据在各层直接传递"></p><h2 id="SWP-Service-Access-Point-服务访问点"><a href="#SWP-Service-Access-Point-服务访问点" class="headerlink" title="SWP(Service Access Point)服务访问点"></a>SWP(Service Access Point)服务访问点</h2><ol><li><p>服务数据单元 SDU（Service Data Unit）。OSI 模型把相邻层实体间传送信息的数据单元称为服务数据单元，并将（N+1）层与（N）层之间传送信息的服务单元记为（N）SDU。（N）服务数据单元实际上是确保（N）服务传输需要的逻辑单元。</p></li><li><p>协议数据单元 PDU（Protocol Data Unit）。OSI 模型把对等实体间传送信息的数据单元称为协议数据单元，并将（N）层的协议数据单元记为（N）PDU。（N）PDU 由两部分组成，即（N）用户数据［记为（N）UD］和（N）协议控制信息［记为（N）PCI］。如果某层的协议数据单元只用于控制，则该协议数据单元中的用户数据可省略，此时只有该层的 PCI。</p></li><li><p>接口数据单元 IDU（Interface Data Unit）。OSI 模型把相邻层实体通过层间服务访问点依次交互信息的数据单元称为接口数据单元，并将（N）层的接口数据单元记为（N）IDU。（N）IDU 也由两部分组成。其中，一部分是（N+1）实体与（N）实体交互的数据，称为接口数据［记为（N）ID］；另一部分是为了协调（N+1）实体与（N）实体的交互操作而附加的控制信息（如服务原语中的某些参数），这些拉制信息称为接口控制信息［记为（N）ICI］。由于接口控制信息只在交互信息通过服务访问点时才起作用，所以，当接口数据单元通过服务访问点后就可以将其取掉。</p><img alt="SWP" src="https://raw.githubusercontent.com/HUMBLEDADDY/ImageHosting/master/img/test.png" style="zoom: 67%;"></li></ol><h2 id="PDU-SDU-IDU-三者关系"><a href="#PDU-SDU-IDU-三者关系" class="headerlink" title="PDU SDU IDU 三者关系"></a>PDU SDU IDU 三者关系</h2>   <img src="https://raw.githubusercontent.com/HUMBLEDADDY/ImageHosting/master/img/test1.png" alt="SDU在实体之间传递" style="zoom: 64%;"><p>上课的时候龙崽想了一个比较恰当的比方，最开始的 data(最初的 SD)就是一块洋葱芯 🧅，随着一层一层实体传递，没传递一层就给洋葱芯裹上一层洋葱皮(PCI)🧅，最后到第 0 层也就是物理层的时候就是一个洋葱 🧅，然后通过物理管道，丢雷老母~🧅</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
